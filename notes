#### copy [_file1_] to brand new [_file2_]

cp [_file1_] [_file2_]

#### clone remote repository [_https://url.git_] to working directory [_folder_]

git clone [_https://url.git_] [_folder_]

#### connect to netbox

ssh g@10.242.210.104

#### activate venv:

source /home/dev/devnet/environments/gman37/bin/activate

#### activate venv:

deactivate

#### get to m2 folder: 

cd /home/genaroarismendi/nickrusso/devasc1/m6

#### open observer.py with vim

vim observer.py

#### vim exit operations

i   enter edit mode
ESC exit edit mode
:q	Close file
:qa	Close all files
:w	Save
:wq / :x	Save and close file
ZZ	Save and quit
ZQ	Quit without checking changes

#### initialize git

git init .

#### identify myself

  git config --global user.email "genaroarismendi@icloud.com"
  git config --global user.name "g"

#### check git status

git status

#### stage/track file

git add database.py

#### stage/track all files in folder

git add .

#### discard changes in working directory

git restore -- start.py

#### discard changes in staging directory

git reset HEAD

#### commit changes to .git repository

git commit -am "[NEW_FILENAME]"

#### discard changes in .git repository

git reset [first 7 characters in sha1 commit id]

#### branching to a new wd called [_NEWBRANCH_]

git checkout -b [_NEWBRANCH_]

#### visualize branches

git log --all --decorate --oneline --graph

#### create shortcut for "log --all --decorate --oneline --graph" as "hist"

git config --global alias.hist "log --all --decorate --oneline --graph"

#### check on which branch we're working

git branch

#### express commit

git commit -am "added decimal and $"

#### print end of [_FILE_]

tail [_FILE_]

#### move to branch called [_MASTER_]

git checkout [_MASTER_]

#### once the changes has been commited or discarded, the experimental branch can be deleted

git branch -d dollars

#### display differences between original and staged file

git diff

#### compare 2 files in bash

diff -u database.py database2.py

#### push changes from local repository to remote repository

git push [-u _MAIN_REPO_ _BRANCH_REPO_]

#### merge (pull) remote repository changes to working directory

git pull 

#### merge (fetch) remote repository changes [_https://url.git_] to local repository [_folder_]

git fetch [_https://url.git_]

#### another way to pull

git fetch [_https://url.git_]

then

git merge ?

#### 

git remote add origin git@github.com:genaroarismendi/globomantics_crm.git
git branch -M main
git push -u origin main

Generate ssh key inside .ssh/ folder. It will ask for path and passphrase where you can just press enter and proceed.

cd ~/.ssh
ssh-keygen
Copy the key You can view your key using

cat ~/.ssh/id_rsa.pub
 
incase you hadnt specified a different path then this will be the default path

Add this key to your github account

#### generate auth token for Cisco DNA center (https://sandboxdnac.cisco.com/dna/system/api/v1/auth/token)

######## with curl

############ activate venv:

source /home/genaroarismendi/environments/gman37/bin/activate

############ get to m5 folder: 

cd /home/genaroarismendi/nickrusso/devasc1/m5

############ execute get_token.sh:

(view with vim:)
curl -X POST \
  -u 'devnetuser:Cisco123!' \
  -H 'Content-Type: application/json' \
  -k --insecure \
  https://sandboxdnac.cisco.com/dna/system/api/v1/auth/token

(gman37) root@devbox:/home/genaroarismendi/nickrusso/devasc1/m5# ./get_token.sh
{"Token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MGVjNGU0ZjRjYTdmOTIyMmM4MmRhNjYiLCJhdXRoU291cmNlIjoiaW50ZXJuYWwiLCJ0ZW5hbnROYW1lIjoiVE5UMCIsInJvbGVzIjpbIjVlOGU4OTZlNGQ0YWRkMDBjYTJiNjQ4ZSJdLCJ0ZW5hbnRJZCI6IjVlOGU4OTZlNGQ0YWRkMDBjYTJiNjQ4NyIsImV4cCI6MTY5MTk4Njk4MSwiaWF0IjoxNjkxOTgzMzgxLCJqdGkiOiI3NTc0MDliZC0xMDE5LTQwZWItYTE5MS1iMGIyZGNjZDE4NTMiLCJ1c2VybmFtZSI6ImRldm5ldHVzZXIifQ.zYXQDvkkRwu92QtFb_pmlfWHRVfcLbCyoZZqtmiF-yoNEop6zOY8B2HDnNWB6R7ToKeBKxPZtiU8qF2hL0esk-hWZgzRt9kZLuDiJf4mScUJNwogkQUsmxwvIRQNAnSqZaSdVp2jULZAC5_2vcRrrxH6T1J0W4hqJeTM9S3QfcuH_VcWfKtTBRH7CLLPBKM5SZ2OzsyC5U8H9JmiHTMYh4ryGBlruywDhqzpPg8827rE5oS02PPhRRv57Q34-oyT9yzP4G8kNE-R2MbF-Gjc4OgN0a0QHCcAFsWoTiZL3KWWCA4dgO3J6Ym7yyqRixZQNTY4fR2ZqZDQ8jcx8ZWSsQ"}

######## with python

############ activate venv:

source /home/genaroarismendi/environments/gman37/bin/activate

############ get to m6 folder: 

cd /home/genaroarismendi/nickrusso/devasc1/m6

############ execute python auth_token.py:

include verify=False in the requests.post method to avoid error 'ssl certificate_verify_failed python requests'

(gman37) root@devbox:/home/genaroarismendi/nickrusso/devasc1/m6# python auth_token.py
/home/genaroarismendi/environments/gman37/lib/python3.8/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandboxdnac.cisco.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MGVjNGU0ZjRjYTdmOTIyMmM4MmRhNjYiLCJhdXRoU291cmNlIjoiaW50ZXJuYWwiLCJ0ZW5hbnROYW1lIjoiVE5UMCIsInJvbGVzIjpbIjVlOGU4OTZlNGQ0YWRkMDBjYTJiNjQ4ZSJdLCJ0ZW5hbnRJZCI6IjVlOGU4OTZlNGQ0YWRkMDBjYTJiNjQ4NyIsImV4cCI6MTY5MTk5MTkxMSwiaWF0IjoxNjkxOTg4MzExLCJqdGkiOiJmOGUyZWI2MS02NWU1LTQ2YmMtOWJmMi03MWU1MDBiYjk1ODAiLCJ1c2VybmFtZSI6ImRldm5ldHVzZXIifQ.C48S-QguTUITlpKzoMteIVPj97BqYxZPp1k1_I7lTVyM3h32PAuO3lycvdO4LuF82To443ITIQm324spXUX5YTjknXX2DPTV_59Aq8RRK0KyHibpUnTMD9rfuSlx0ZerEfH9aIFhEZjzp7GFuwRjXlMYJ9ZFD6tKA8lPswjGFZcsppksFAVW8SHYbuKVDJVt2vF5BR6KOJ_9sFEJUQlrpHjFURlzhR6z9p2umWJvWMpUMDxrzfeW8J3Ez1j5CoBVMAmoxRRdxOFAdGQfn3ykDkVg2K1c9u3IdMU5V1cUwT_6iDYAxtYKYnOHri0xn-399XRa3wNcEVTxSGyUhmZhTg
(gman37) root@devbox:/home/genaroarismendi/nickrusso/devasc1/m6#
